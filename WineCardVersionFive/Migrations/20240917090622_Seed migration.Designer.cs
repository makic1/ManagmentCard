// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WineCardVersionFive;

#nullable disable

namespace WineCardVersionFive.Migrations
{
    [DbContext(typeof(DbContextWineCardVersionFive))]
    [Migration("20240917090622_Seed migration")]
    partial class Seedmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WineCardVersionFive.Entities.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<string>("HashPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("AccountId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            AccountId = 1,
                            HashPassword = "$2a$11$U7DFbHtdyCsSHcU1cpQOFuoSUnj7eJbNebEg9V4LqZqmucQXo.mN.",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("WineCardVersionFive.Entities.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CountryId");

                    b.ToTable("Countrys");
                });

            modelBuilder.Entity("WineCardVersionFive.Entities.GrapeVariety", b =>
                {
                    b.Property<int>("GrapeVarietyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GrapeVarietyId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GrapeVarietyId");

                    b.ToTable("GrapeVarieties");
                });

            modelBuilder.Entity("WineCardVersionFive.Entities.Region", b =>
                {
                    b.Property<int>("RegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegionId"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RegionId");

                    b.HasIndex("CountryId");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("WineCardVersionFive.Entities.Vintage", b =>
                {
                    b.Property<int>("VintageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VintageId"));

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("VintageId");

                    b.ToTable("Vintages");
                });

            modelBuilder.Entity("WineCardVersionFive.Entities.Wine", b =>
                {
                    b.Property<int>("WineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WineId"));

                    b.Property<int>("GrapeVarietyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("PriceInEuro")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("VintageId")
                        .HasColumnType("int");

                    b.Property<int?>("WineCardId")
                        .HasColumnType("int");

                    b.Property<int>("WineTypeId")
                        .HasColumnType("int");

                    b.Property<int>("WineryId")
                        .HasColumnType("int");

                    b.HasKey("WineId");

                    b.HasIndex("GrapeVarietyId");

                    b.HasIndex("VintageId");

                    b.HasIndex("WineCardId");

                    b.HasIndex("WineTypeId");

                    b.HasIndex("WineryId");

                    b.ToTable("Wines");
                });

            modelBuilder.Entity("WineCardVersionFive.Entities.WineCard", b =>
                {
                    b.Property<int>("WineCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WineCardId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("WineCardId");

                    b.ToTable("WineCards");

                    b.HasData(
                        new
                        {
                            WineCardId = 1,
                            Name = "Unsere Weinkarte"
                        });
                });

            modelBuilder.Entity("WineCardVersionFive.Entities.WineType", b =>
                {
                    b.Property<int>("WineTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WineTypeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("WineTypeId");

                    b.ToTable("WineTypes");
                });

            modelBuilder.Entity("WineCardVersionFive.Entities.Winery", b =>
                {
                    b.Property<int>("WineryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WineryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("WineryId");

                    b.HasIndex("RegionId");

                    b.ToTable("Wineries");
                });

            modelBuilder.Entity("WineCardVersionFive.Entities.Region", b =>
                {
                    b.HasOne("WineCardVersionFive.Entities.Country", "Country")
                        .WithMany("Regions")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("WineCardVersionFive.Entities.Wine", b =>
                {
                    b.HasOne("WineCardVersionFive.Entities.GrapeVariety", "GrapeVariety")
                        .WithMany("Wines")
                        .HasForeignKey("GrapeVarietyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WineCardVersionFive.Entities.Vintage", "Vintage")
                        .WithMany("Wines")
                        .HasForeignKey("VintageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WineCardVersionFive.Entities.WineCard", "WineCard")
                        .WithMany("Wines")
                        .HasForeignKey("WineCardId");

                    b.HasOne("WineCardVersionFive.Entities.WineType", "WineType")
                        .WithMany("Wines")
                        .HasForeignKey("WineTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WineCardVersionFive.Entities.Winery", "Winery")
                        .WithMany("Wines")
                        .HasForeignKey("WineryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrapeVariety");

                    b.Navigation("Vintage");

                    b.Navigation("WineCard");

                    b.Navigation("WineType");

                    b.Navigation("Winery");
                });

            modelBuilder.Entity("WineCardVersionFive.Entities.Winery", b =>
                {
                    b.HasOne("WineCardVersionFive.Entities.Region", "Region")
                        .WithMany("Wineries")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("WineCardVersionFive.Entities.Country", b =>
                {
                    b.Navigation("Regions");
                });

            modelBuilder.Entity("WineCardVersionFive.Entities.GrapeVariety", b =>
                {
                    b.Navigation("Wines");
                });

            modelBuilder.Entity("WineCardVersionFive.Entities.Region", b =>
                {
                    b.Navigation("Wineries");
                });

            modelBuilder.Entity("WineCardVersionFive.Entities.Vintage", b =>
                {
                    b.Navigation("Wines");
                });

            modelBuilder.Entity("WineCardVersionFive.Entities.WineCard", b =>
                {
                    b.Navigation("Wines");
                });

            modelBuilder.Entity("WineCardVersionFive.Entities.WineType", b =>
                {
                    b.Navigation("Wines");
                });

            modelBuilder.Entity("WineCardVersionFive.Entities.Winery", b =>
                {
                    b.Navigation("Wines");
                });
#pragma warning restore 612, 618
        }
    }
}
